*,
*:after,
*:before {
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
}

html,
html a {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -moz-font-smoothing: antialiased;
  -ms-font-smoothing: antialiased;
  font-smoothing: antialiased;
}

.menu,
ul,
ol,
dl {
  margin: 0;
  padding: 0;
}

html {
  font-size: 100%;
}

body {
  background: #fff;
  color: #000;
  margin: 0;
  padding: 0;
}

img {
  height: auto;
  max-width: 100%;
}

body {
  font-size: 1rem;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  line-height: 24px;
}

a {
  transition: all 150ms linear;
}

a:hover, a:focus {
  color: #262626;
}

strong {
  font-weight: 700;
}

small {
  font-size: 80%;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 0;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
}

h1 a,
h2 a,
h3 a,
h4 a,
h5 a,
h6 a {
  color: inherit;
  font-weight: inherit;
  text-decoration: none;
}

h1 {
  margin-bottom: 30px;
  font-size: 2.5rem;
}

h2 {
  margin-bottom: 20px;
  font-size: 2rem;
}

h3 {
  margin-bottom: 15px;
  font-size: 1.5rem;
}

h4 {
  margin-bottom: 10px;
  font-size: 1.25rem;
}

h5 {
  margin-bottom: 5px;
  font-size: 1rem;
}

h6 {
  font-size: 90%;
}

p {
  margin-top: 0;
}

p + h2,
ul + h2,
ol + h2 {
  margin-top: 30px;
}

p + h3,
ul + h3,
ol + h3 {
  margin-top: 25px;
}

p + h4,
ul + h4,
ol + h4 {
  margin-top: 20px;
}

ul li,
ol li {
  margin-top: 5px;
}

ul li:first-child,
ol li:first-child {
  margin-top: 0;
}

ul ul,
ul ol,
ol ul,
ol ol {
  margin-top: 10px;
}

ul + p,
ol + p {
  margin-top: 15px;
}

ul {
  padding-left: 20px;
}

ol {
  padding-left: 21px;
}

.container {
  padding-right: 1rem;
  padding-left: 1rem;
  margin-right: auto;
  margin-left: auto;
  max-width: 1400px;
}

@media screen and (min-width: 40em) and (max-width: 88.5em) {
  .container {
    padding-right: 2rem;
    padding-left: 2rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

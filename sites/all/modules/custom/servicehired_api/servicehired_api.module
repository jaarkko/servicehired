
<?php
/**
 * Implements hook_menu
 */
function servicehired_api_menu() {

  // Creates orders.
  $items['developers/new_user'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'servicehired_order_create',
    'file' => 'includes/servicehired_account.rest.inc',
    'access arguments' => array('access content')
  );

    // Creates comments through api.
  $items['developers/api/status_update'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'servicehired_update_status',
    'file' => 'includes/servicehired_account.rest.inc',
    'access arguments' => array('access content')
  );

  // Creates comments through api.
  $items['developers/api/payment/%/%/%'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'servicehired_payment',
    'file' => 'includes/servicehired_account.rest.inc',
    'access arguments' => array('access content')
  );

  // Creates comments through api.
  $items['developers/api/create_comment'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'servicehired_create_comment',
    'file' => 'includes/servicehired_account.rest.inc',
    'access arguments' => array('access content')
  );

  // Creates comments through api.
  $items['developers/cancel/%'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'servicehired_cancel',
    'file' => 'includes/servicehired_account.rest.inc',
    'page arguments' => array(3),
    'access arguments' => array('access content')
  );


  $items['dash'] = array(
    'page callback' => 'dashboard_page',
    'access arguments' => array('access content')
  );

  $items['billing'] = array(
    'page callback' => 'billing_page',
    'access arguments' => array('access content')
  );

  $items['sell'] = array(
    'page callback' => 'sell_page',
    'access arguments' => array('access content')
  );

  $items['create-business'] = array(
    'page callback' => 'create_business',
    'access arguments' => array('access content')
  );

  // Creates comments through api.
  $items['developers/get_orders'] = array(
    'access arguments' => array('access content'),
    'page callback' => 'servicehired_get_orders'
  );

  return $items;
}

function dashboard_page(){
  return theme('dashboard_page');
}
function billing_page(){
  return theme('billing_page');
}
function sell_page(){
  return theme('sell_page');
}
function create_business(){
  return theme('create_business');
}

/**
 * Implements hook_theme()
 */
function servicehired_api_theme() {
  return array(
    'dashboard_page' => array(
      'render element' => 'elements',
      'template' => 'templates/dashboard',
    ),
    'billing_page' => array(
      'render element' => 'elements',
      'template' => 'templates/billing',
    ),
    'sell_page' => array(
      'render element' => 'elements',
      'template' => 'templates/sell',
    ),
    'create_business' => array(
      'render element' => 'elements',
      'template' => 'templates/create_business',
    ),
  );
}


function servicehired_get_orders() {
  global $user;
  $query = new EntityFieldQuery();
  $result = $query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'order')
    ->propertyCondition('uid', $user->uid);
  $result = $query->execute();
  $nids = array_keys($result['node']);
  $nodes = node_load_multiple($nids);
  $i = 0;
  $key = array();
  foreach ($nodes as $node) {
    $i ++;
    $key[$i]['url'] = 'node/'.$node->nid;
    $key[$i]['title'] = $node->title;
    $key[$i]['created'] = date('d/m/Y', $node->created);
    $key[$i]['body'] = $node->body['und'][0]['value'];
    $key[$i]['status'] = $node->field_status['und'][0]['value'];
  }

  return $key;
}


function status_bar_format($status) {
  $html = '<div class="status-bar status-'.$status.'">
  <div class="bar first">Order made</div>
  <div class="bar second">Confirmed</div>
  <div class="bar last">Paid</div >
  </div>';

  return $html;
}

function servicehired_orders_format() {
  $key = servicehired_get_orders();
  $html = '';

  foreach ($key as $res){
    $html .= '<a href="'.$res['url'].'">
    <div class="result">
    <div class="insider">
    <div class="res-title">'.$res['title'].'</div>
    <div class="status">'.status_bar_format($res['status']).'</div>
    <div class="created">'.$res['created'].'</div>
    </div></div></a>';
  }
  return $html;
}

function get_users_cards(){
  global $user;
  $user = user_load($user->uid);
  $token = $user->field_stripe_customer_token['und'][0]['value'];
  $call = stripe_api_call('Customer', 'retrieve', $token);

  // Decode response from Stripe.
  $account_json = $call->__toJSON();
  $account_array = json_decode($account_json);
  $type = $account_array->sources->data[0]->brand;
  $last4 = $account_array->sources->data[0]->last4;
  $expyear = $account_array->sources->data[0]->exp_year;
  $expmonth = $account_array->sources->data[0]->exp_month;

  $card = array();
  $card['type'] = $type;
  $card['last4'] = $last4;
  $card['expyear'] = $expyear;
  $card['expmonth'] = $expmonth;

  return($card);
}



function formatted_card (){
  $card = get_users_cards();
  $html = '<div class="card card-'.$card['type'].'">
  <div class="number">Card ending in '.$card['last4'].'</div>
  <div class="ending">Expiry: '.$card['expmonth'].'-'.$card['expyear'].'</div>
  </div>';
  return $html;
}

function get_user_billing (){
  global $user;
  $user = user_load($user->uid);
  $customer = array(
    'customer' => $user->field_stripe_customer_token['und'][0]['value'],
  );
  $call = stripe_api_call('Charge', 'all',  $customer);

  // Decode response from Stripe.
  $account_json = $call->__toJSON();
  $account_array = json_decode($account_json);

  $list = '';
  foreach ($account_array->data as $event){
    $list .= '<li>Amount: '.$event->amount.' Date: '. $event->created. ' Description: '. $event->description. ' Card: '. $event->source->brand .' ending in '. $event->source->last4. '</li>';
  }
  return($list);
}

function servicehired_api_menu_alter(&$items) {
  $items['file/ajax']['file path'] = drupal_get_path('module', 'node');
  $items['file/ajax']['file'] = 'node.pages.inc';
  $items['system/ajax']['file path'] = drupal_get_path('module', 'node');
  $items['system/ajax']['file'] = 'node.pages.inc';
}

function get_businesses_of_user(){
  global $user;
  $query = new EntityFieldQuery;
  $result = $query
    ->entityCondition('entity_type', 'node')
    ->propertyCondition('status', 1)
    ->propertyCondition('type', 'supplier')
    ->propertyCondition('uid', $user->uid)
    ->execute();

  if ($result){
    return $result['node'];
  } else {
    return null;
  }
}

function format_businesses(){
  $businesses = get_businesses_of_user();
  $html = '<div class="left-col"><h3>How to get more bookings?</h3>
    <h4>Improve your business profile</h4>
    <p>We want your business details. This allows our thousands
      of visitors to see and find you. Make sure to add a few
      high quality images.</p>
       <h4>Share your profile on social media</h4>
    <p>The more people know about us, the more will also be able
    to find you and book you through us. The more clicks your page gets
    the better you rank against your peers.</p>
       <h4>Raise your visibility</h4>
    <p>Not getting bookings? Try raised visibility for free
    for a one week period. This is normally a cost of 50â‚¬ per.
    month. Our premium suppliers are verified and rank higher in our 
    search.</p>
  </div>
  <div class="right-col">';

  if($businesses){
    foreach ($businesses as $business) {
      $loaded = node_load($business->nid);
      $html .= '<li>'.$loaded->title.'</li>';
    }
    $html .= '</div>';
  } else {
    $html = '<div class="left-col"><h3>How does Servicehired work?</h3><p>1. Lets start with the basics</p>
<p>We want your business details. This allows our thousands
      of visitors to see and find you. Make sure to add a few
      high quality images.</p></div>
  <div class="right-col"><a href="create-business">Start by adding your business</a></div>
<li></li>';
  }
  return($html);
}